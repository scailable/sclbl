import click
import sclbl._globals as glob
from sclblpy import _set_taskmanager_URL
from sclblpy import _set_toolchain_URL
from sclblpy import _set_usermanager_URL
from sclblpy import stop_print
from sclblpy import upload_onnx


@click.group()
def main():
    """ Scailable CLI interface

    This package provides a CLI interface to the Scailable Platform.

    """
    init()


# init initializes the package; this is called by main (which is called whenever the package is used).
def init():
    if not glob.DEBUG:  # If package not in debug mode, suppress printing from sclblpy.
        stop_print()

    # Set the correct target servers (see _globals.py)
    _set_toolchain_URL(glob.TOOLCHAIN_URL)
    _set_usermanager_URL(glob.USER_MANAGER_URL)
    _set_taskmanager_URL(glob.TASK_MANAGER_URL)
    print("Initialized...")


@main.command()
@click.option('--file', '-f', type=str, required=True, help="Path for the input ONNX file.")
@click.option('--name', '-n', type=str, required=True, help="Name of the model.")
@click.option('--docs', '-d', type=str, required=False, default="...", help="Model documentation.")
@click.option('--example', '-e', type=str, required=False, default="...", help="Example model input string.")
@click.option('--email', '-m', type=bool, required=False, default=True, help="Send confirmation email.")
@click.option('--verbose', '-v', type=bool, required=True, default=False, help="Provide user feedback.")
def upload(file, name, docs, example, email, verbose):

    msg = input("test input:")
    print(msg)

    # upload onnx
    docs = {'name': name, 'docs': docs}
    result = upload_onnx(file, example, docs, email)
    if verbose:
        if result:
            print("You model was is successfully submitted to the Scailable toolchain.")
        else:
            print("We were unable to upload your model.")





if __name__ == '__main__':
    print("Make sure to...")